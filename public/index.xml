<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ILXNAH&#39;s den</title>
    <link>/</link>
    <description>Recent content on ILXNAH&#39;s den</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 Jan 2025 08:20:38 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating Obsidian blog with Hugo</title>
      <link>/posts/creating-obsidian-blog/</link>
      <pubDate>Tue, 28 Jan 2025 08:20:38 +0000</pubDate>
      
      <guid>/posts/creating-obsidian-blog/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Following a &lt;a href=&#34;https://www.youtube.com/watch?v=dnE7c0ELEH8&#34;&gt;video from NetworkChuck&lt;/a&gt;, then freestyling it to GitHub Pages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We only know what we make.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;battle-plan-&#34;&gt;Battle Plan 👀&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian.md&lt;/a&gt; for note-taking&lt;/li&gt;
&lt;li&gt;Turn it into HTML code using &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;Hugo&lt;/a&gt; (a tool to convert .md files into a website)&lt;/li&gt;
&lt;li&gt;Ship the code off to your &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; profile repo&lt;/li&gt;
&lt;li&gt;Be a rebel &amp;amp; deploy for free via &lt;a href=&#34;https://pages.github.com/&#34;&gt;Pages&lt;/a&gt; (instead of Hostinger)&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;note&#34;&gt;Note&lt;/h6&gt;
&lt;p&gt;My setup is on Windows PC, but if you need a guide for Linux/Mac, Chuck got those differences covered in &lt;a href=&#34;https://blog.networkchuck.com/posts/my-insane-blog-pipeline/&#34;&gt;his&lt;/a&gt; documentation. For the sake of sanity, I&amp;rsquo;m keeping my email/username/paths within the commands, i.e. don&amp;rsquo;t forget to change them.&lt;/p&gt;</description>
      <content>&lt;hr&gt;
&lt;p&gt;Following a &lt;a href=&#34;https://www.youtube.com/watch?v=dnE7c0ELEH8&#34;&gt;video from NetworkChuck&lt;/a&gt;, then freestyling it to GitHub Pages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We only know what we make.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;battle-plan-&#34;&gt;Battle Plan 👀&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian.md&lt;/a&gt; for note-taking&lt;/li&gt;
&lt;li&gt;Turn it into HTML code using &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;Hugo&lt;/a&gt; (a tool to convert .md files into a website)&lt;/li&gt;
&lt;li&gt;Ship the code off to your &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; profile repo&lt;/li&gt;
&lt;li&gt;Be a rebel &amp;amp; deploy for free via &lt;a href=&#34;https://pages.github.com/&#34;&gt;Pages&lt;/a&gt; (instead of Hostinger)&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;note&#34;&gt;Note&lt;/h6&gt;
&lt;p&gt;My setup is on Windows PC, but if you need a guide for Linux/Mac, Chuck got those differences covered in &lt;a href=&#34;https://blog.networkchuck.com/posts/my-insane-blog-pipeline/&#34;&gt;his&lt;/a&gt; documentation. For the sake of sanity, I&amp;rsquo;m keeping my email/username/paths within the commands, i.e. don&amp;rsquo;t forget to change them.&lt;/p&gt;
&lt;h4 id=&#34;initial-installation&#34;&gt;Initial Installation&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Install everything: &lt;a href=&#34;https://obsidian.md/download&#34;&gt;Obsidian&lt;/a&gt;, &lt;a href=&#34;https://apps.microsoft.com/detail/9n0dx20hk701?hl=en-US&amp;amp;gl=US&#34;&gt;Terminal&lt;/a&gt;/PowerShell, &lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;VS Code&lt;/a&gt;, &lt;a href=&#34;https://go.dev/dl/&#34;&gt;Golang&lt;/a&gt;, &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 3&lt;/a&gt;, &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt; and &lt;a href=&#34;https://gohugo.io/installation/&#34;&gt;Hugo&lt;/a&gt; (add the .exe into your program location, e.g. Program Files, and also into PATH)&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;Hugo Posts&lt;/code&gt; folder within your Obsidian Workspace for your blog articles&lt;/li&gt;
&lt;li&gt;Within this folder, start a new note (that will be your first blog post)&lt;/li&gt;
&lt;li&gt;Double-check correct installations via the &lt;code&gt;version&lt;/code&gt; flagged commands: &lt;code&gt;go version&lt;/code&gt;, &lt;code&gt;git --version&lt;/code&gt;, &lt;code&gt;hugo version&lt;/code&gt;, &lt;code&gt;python --version&lt;/code&gt; etc.&lt;/li&gt;
&lt;li&gt;Navigate to your desired directory for storing blog files on your machine, e.g.: &lt;code&gt;cd C:\Users\ilona\Documents\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a new folder for Hugo blog and set up git: &lt;code&gt;hugo new site ILXNAH.github.io&lt;/code&gt; &amp;gt; &lt;code&gt;cd .\ILXNAH.github.io&lt;/code&gt; &amp;gt; &lt;code&gt;git init&lt;/code&gt; &amp;gt; &lt;code&gt;git config --global user.name &amp;quot;ILXNAH&amp;quot;&lt;/code&gt; &amp;gt; &lt;code&gt;git config --global user.email &amp;quot;ILXNAH@tutanota.com&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Navigate to &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;Hugo Themes&lt;/a&gt; and pick a theme to install for your blog.&lt;/li&gt;
&lt;li&gt;Select installation option for a specific theme, e.g. look here for &lt;a href=&#34;https://themes.gohugo.io/themes/hugo-theme-terminal/&#34;&gt;Terminal theme&lt;/a&gt;. I used local installation to avoid any fuss when transferring between repos.
&lt;code&gt;git clone https://github.com/panr/hugo-theme-terminal.git themes/terminal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit the config file called so that it matches the installed theme; Terminal theme has a &lt;a href=&#34;https://themes.gohugo.io/themes/hugo-theme-terminal/#how-to-configure&#34;&gt;config file&lt;/a&gt; on its page which you can copy (leave out modules) and paste into &lt;code&gt;hugo.toml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run Hugo server preview with &lt;code&gt;hugo serve&lt;/code&gt;: take a look at &lt;a href=&#34;/&#34;&gt;//localhost:1313/&lt;/a&gt; &amp;gt; Ctrl+C to cancel website preview&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;syncing-obsidian-to-hugo&#34;&gt;Syncing Obsidian to Hugo&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;posts folder will be syncing from &lt;code&gt;Obsidian Vault/Hugo Posts&lt;/code&gt; into &lt;code&gt;/ILXNAH.github.io/content/posts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd content&lt;/code&gt; &amp;gt; &lt;code&gt;mkdir posts&lt;/code&gt; (this folder will be synced with Obsidian source folder) with this command:
&lt;div class=&#34;code-container&#34;&gt;
  &lt;pre class=&#34;code-block&#34;&gt;robocopy &amp;#34;C:\Users\ilona\Documents\obsidian\Hugo Posts&amp;#34; &amp;#34;C:\Users\ilona\Documents\ILXNAH.github.io\content\posts&amp;#34; /mir&lt;/pre&gt;
  &lt;button class=&#34;expand-code&#34;&gt;Show More&lt;/button&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo serve&lt;/code&gt; to preview blog with imported posts &amp;gt; Ctrl+C to exit the preview&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;using-front-matter-in-obsidian&#34;&gt;Using Front Matter in Obsidian&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;set up metadata via Obsidian properties:
&lt;ul&gt;
&lt;li&gt;you can use many community plugins, e.g. &lt;a href=&#34;https://www.make.md/&#34;&gt;make.md&lt;/a&gt; or &lt;a href=&#34;https://github.com/SilentVoid13/Templater&#34;&gt;Templater&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;make sure the draft property is unchecked, so the post is displayed
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hugo serve -D&lt;/code&gt; flagged command will include posts in draft mode&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ideally, create a template with desired properties for your blog posts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;run robocopy again with added post properties in your source files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo serve&lt;/code&gt; to verify the metadata is showing &amp;gt; exit preview&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;fixing-image-attachments-using-a-python-script&#34;&gt;Fixing image attachments using a Python script&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;in your blog dir, &lt;code&gt;cd static&lt;/code&gt; &amp;gt; &lt;code&gt;mkdir images&lt;/code&gt; &amp;gt; &lt;code&gt;cd ..&lt;/code&gt; &amp;gt; &lt;code&gt;code images.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;insert code, make sure to edit all three paths, and save:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;code-container&#34;&gt;
  &lt;pre class=&#34;code-block&#34;&gt;import os
import re
import shutil

# Paths (using raw strings to handle Windows backslashes correctly)
posts_dir = r&amp;#34;C:\Users\ilona\Documents\ILXNAH.github.io\content\posts&amp;#34;
attachments_dir = r&amp;#34;C:\Users\ilona\Documents\obsidian\Attachments&amp;#34;
static_images_dir = r&amp;#34;C:\Users\ilona\Documents\ILXNAH.github.io\static\images&amp;#34;

# Step 1: Process each markdown file in the posts directory
for filename in os.listdir(posts_dir):
    if filename.endswith(&amp;#34;.md&amp;#34;):
        filepath = os.path.join(posts_dir, filename)

        with open(filepath, &amp;#34;r&amp;#34;, encoding=&amp;#34;utf-8&amp;#34;) as file:
            content = file.read()

        # Step 2: Find all image links in the format ![Image Description](/images/Pasted%20image%20...%20.png)
        images = re.findall(r&amp;#39;\[\[([^]]*\.(?:png|jpg|jpeg))\]\]&amp;#39;, content)

        # Step 3: Replace image links and ensure URLs are correctly formatted
        for image in images:
            # Prepare the Markdown-compatible link with %20 replacing spaces
            markdown_image = f&amp;#34;![Image Description](/images/{image.replace(&amp;#39; &amp;#39;, &amp;#39;%20&amp;#39;)})&amp;#34;
            content = content.replace(f&amp;#34;[[{image}]]&amp;#34;, markdown_image)

            # Step 4: Copy the image to the Hugo static/images directory if it exists
            image_source = os.path.join(attachments_dir, image)
            if os.path.exists(image_source):
                shutil.copy(image_source, static_images_dir)

        # Step 5: Write the updated content back to the markdown file
        with open(filepath, &amp;#34;w&amp;#34;, encoding=&amp;#34;utf-8&amp;#34;) as file:
            file.write(content)

print(&amp;#34;Markdown files processed and images copied successfully.&amp;#34;)&lt;/pre&gt;
  &lt;button class=&#34;expand-code&#34;&gt;Show More&lt;/button&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;added image for testing purposes of the part of the script we just did:
&lt;img src=&#34;/images/Pasted%20image%2020250131130510.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;pushing-code-into-github&#34;&gt;Pushing code into GitHub&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;create GitHub repo with name &lt;code&gt;ILXNAH.github.io&lt;/code&gt; and set visibility to public&lt;/li&gt;
&lt;li&gt;you will need an SSH key, which you can generate with &lt;code&gt;ssh-keygen -t rsa -b 4096 -C &amp;quot;ILXNAH@tutanota.com&amp;quot;&lt;/code&gt; if you don&amp;rsquo;t have one yet&lt;/li&gt;
&lt;li&gt;this keypair (public and private key) will be created in dir &lt;code&gt;~/.ssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;within that dir, to add pubkey to GitHub, copy its content displayed via &lt;code&gt;cat .\id_rsa.pub&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;GitHub &amp;gt; Settings &amp;gt; SSH &amp;gt; New key &amp;gt; paste in there&lt;/li&gt;
&lt;li&gt;test that it&amp;rsquo;s working on your PC with cmd &lt;code&gt;ssh -T git@github.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;in your blog dir, &lt;code&gt;git remote add origin git@github.com:ILXNAH/ILXNAH.github.io.git&lt;/code&gt; to define the remote repo (the one you created on GitHub) aka add it to your local setup &amp;gt; &lt;code&gt;git branch -M main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;type &lt;code&gt;hugo&lt;/code&gt; to make sure website has been built&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; to add all changes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;First commit&amp;quot;&lt;/code&gt; to commit those changes (locally)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -u origin main&lt;/code&gt; to push from local to remote repo
(specified is: first, name of your remote repo &lt;code&gt;origin&lt;/code&gt;, then branch name &lt;code&gt;main&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;deploying-to-github-pages&#34;&gt;Deploying to GitHub Pages&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;on repo website, go to Settings &amp;gt; Pages &amp;gt; Source: GitHub Actions&lt;/li&gt;
&lt;li&gt;in your local repo, add folder &amp;ldquo;&lt;code&gt;.github&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;within there, create a folder called &amp;ldquo;&lt;code&gt;workflows&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;within there, create a &amp;ldquo;&lt;code&gt;hugo.yaml&lt;/code&gt;&amp;rdquo; file&lt;/li&gt;
&lt;li&gt;copy workflow code into &lt;code&gt;hugo.yaml&lt;/code&gt; from &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34;&gt;Hugo&amp;rsquo;s official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; &amp;gt; &lt;code&gt;git commit -m &amp;quot;github actions&amp;quot;&lt;/code&gt; &amp;gt; &lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;publishing-workflow&#34;&gt;Publishing Workflow&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;robocopy &amp;quot;C:\Users\ilona\Documents\obsidian\Hugo Posts&amp;quot; &amp;quot;C:\Users\ilona\Documents\ILXNAH.github.io\content\posts&amp;quot; /mir&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python images.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(to view - can be skipped) &lt;code&gt;hugo serve --noHTTPCache&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;use this flag to avoid site refresh being stuck due to cache (if you&amp;rsquo;re editing in real-time)&lt;/li&gt;
&lt;li&gt;you can create alias: &lt;code&gt;hss=&#39;hugo serve --noHTTPCache&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; &amp;gt; &lt;code&gt;git commit -m &amp;quot;change&amp;quot;&lt;/code&gt; &amp;gt; &lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;final-automation-script-in-powershell&#34;&gt;Final automation script in PowerShell&lt;/h4&gt;
&lt;p&gt;The below script automates the publishing workflow steps above (apart from preview):&lt;/p&gt;
&lt;div class=&#34;code-container&#34;&gt;
  &lt;pre class=&#34;code-block&#34;&gt;# Set variables for Obsidian to Hugo copy
$sourcePath = &amp;#34;C:\Users\ilona\Documents\obsidian\Hugo Posts&amp;#34;
$destinationPath = &amp;#34;C:\Users\ilona\Documents\ILXNAH.github.io\content\posts&amp;#34;

# Set Github repo 
$myrepo = &amp;#34;git@github.com:ILXNAH/ILXNAH.github.io.git&amp;#34;

# Set error handling
$ErrorActionPreference = &amp;#34;Stop&amp;#34;
Set-StrictMode -Version Latest

# Change to the script&amp;#39;s directory
$ScriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
Set-Location $ScriptDir

# Check for required commands
$requiredCommands = @(&amp;#39;git&amp;#39;, &amp;#39;hugo&amp;#39;)

# Check for Python command (python or python3)
if (Get-Command &amp;#39;python&amp;#39; -ErrorAction SilentlyContinue) {
    $pythonCommand = &amp;#39;python&amp;#39;
} elseif (Get-Command &amp;#39;python3&amp;#39; -ErrorAction SilentlyContinue) {
    $pythonCommand = &amp;#39;python3&amp;#39;
} else {
    Write-Error &amp;#34;Python is not installed or not in PATH.&amp;#34;
    exit 1
}
foreach ($cmd in $requiredCommands) {
    if (-not (Get-Command $cmd -ErrorAction SilentlyContinue)) {
        Write-Error &amp;#34;$cmd is not installed or not in PATH.&amp;#34;
        exit 1
    }
}

# Step 1: Check if Git is initialized, and initialize if necessary
if (-not (Test-Path &amp;#34;.git&amp;#34;)) {
    Write-Host &amp;#34;Initializing Git repository...&amp;#34;
    git init
    git remote add origin $myrepo
} else {
    Write-Host &amp;#34;Git repository already initialized.&amp;#34;
    $remotes = git remote
    if (-not ($remotes -contains &amp;#39;origin&amp;#39;)) {
        Write-Host &amp;#34;Adding remote origin...&amp;#34;
        git remote add origin $myrepo
    }
}

# Step 2: Sync posts from Obsidian to Hugo content folder using Robocopy
Write-Host &amp;#34;Syncing posts from Obsidian...&amp;#34;
if (-not (Test-Path $sourcePath)) {
    Write-Error &amp;#34;Source path does not exist: $sourcePath&amp;#34;
    exit 1
}
if (-not (Test-Path $destinationPath)) {
    Write-Error &amp;#34;Destination path does not exist: $destinationPath&amp;#34;
    exit 1
}

# Use Robocopy to mirror the directories
$robocopyOptions = @(&amp;#39;/MIR&amp;#39;, &amp;#39;/Z&amp;#39;, &amp;#39;/W:5&amp;#39;, &amp;#39;/R:3&amp;#39;)
$robocopyResult = robocopy $sourcePath $destinationPath @robocopyOptions
if ($LASTEXITCODE -ge 8) {
    Write-Error &amp;#34;Robocopy failed with exit code $LASTEXITCODE&amp;#34;
    exit 1
}

# Step 3: Process Markdown files with Python script to handle image links
Write-Host &amp;#34;Processing image links in Markdown files...&amp;#34;
if (-not (Test-Path &amp;#34;images.py&amp;#34;)) {
    Write-Error &amp;#34;Python script images.py not found.&amp;#34;
    exit 1
}

# Execute the Python script
try {
    &amp;amp; $pythonCommand images.py
} catch {
    Write-Error &amp;#34;Failed to process image links.&amp;#34;
    exit 1
}

# Step 4: Build the Hugo site
Write-Host &amp;#34;Building the Hugo site...&amp;#34;
try {
    hugo
} catch {
    Write-Error &amp;#34;Hugo build failed.&amp;#34;
    exit 1
}

# Step 5: Add changes to Git
Write-Host &amp;#34;Staging changes for Git...&amp;#34;
$hasChanges = (git status --porcelain) -ne &amp;#34;&amp;#34;
if (-not $hasChanges) {
    Write-Host &amp;#34;No changes to stage.&amp;#34;
} else {
    git add .
}

# Step 6: Commit changes with a dynamic message
$commitMessage = &amp;#34;Blog Update on $(Get-Date -Format &amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;)&amp;#34;
$hasStagedChanges = (git diff --cached --name-only) -ne &amp;#34;&amp;#34;
if (-not $hasStagedChanges) {
    Write-Host &amp;#34;No changes to commit.&amp;#34;
} else {
    Write-Host &amp;#34;Committing changes...&amp;#34;
    git commit -m &amp;#34;$commitMessage&amp;#34;
}

# Step 7: Push all changes to the main branch
Write-Host &amp;#34;Pushing to GitHub Main...&amp;#34;
try {
    git push origin main
} catch {
    Write-Error &amp;#34;Failed to push to Main branch.&amp;#34;
    exit 1
}

Write-Host &amp;#34;All done! Site synced, processed, committed, built, and deployed.&amp;#34;&lt;/pre&gt;
  &lt;button class=&#34;expand-code&#34;&gt;Show More&lt;/button&gt;
&lt;/div&gt;
</content>
    </item>
    
    <item>
      <title>Podcasts I like to listen to (or didn&#39;t get to it yet)</title>
      <link>/posts/podcasts-i-like-to-listen-to/</link>
      <pubDate>Mon, 27 Jan 2025 00:38:07 +0000</pubDate>
      
      <guid>/posts/podcasts-i-like-to-listen-to/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Below you will find lists of podcasts I listen to or have discovered (with links to mostly 🍏 Podcasts).&lt;/p&gt;
&lt;h3 id=&#34;coding&#34;&gt;Coding:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-women-who-code-podcast/id1141694878&#34;&gt;The Women Who Code Podcast&lt;/a&gt; by &lt;a href=&#34;https://www.womenwhocode.com/&#34;&gt;Women Who Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/hidden-figures-of-python-podcast/id1720808525&#34;&gt;Hidden Figures of Python Podcast&lt;/a&gt; by PyPodcats&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cybersecurity-czech&#34;&gt;Cybersecurity (Czech):&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/cyber-rangers-podcast/id1513746938&#34;&gt;Cyber Rangers Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/o2-cybercast/id1634178629&#34;&gt;O2 CyberCast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;devops&#34;&gt;DevOps:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcast.bretfisher.com/&#34;&gt;DevOps and Docker Talk: Cloud Native Interview and Tooling&lt;/a&gt; by Bret Fisher&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-scripting-den-podcast/id1729484590&#34;&gt;The Scripting Den Podcast&lt;/a&gt; by Fernando Doglio&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/kubernetes-podcast-from-google/id1370049232&#34;&gt;Kubernetes Podcast from Google&lt;/a&gt; by Abdel Sghiouar &amp;amp; Kaslin Fields&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-humans-of-devops-podcast-series/id1478025522&#34;&gt;The Humans of DevOps&lt;/a&gt; by the &lt;a href=&#34;https://www.devopsinstitute.com/humans-of-devops-podcast/&#34;&gt;DevOps Institute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;networking&#34;&gt;Networking:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-cisco-learning-network/id1349472942&#34;&gt;The Cisco Learning Network Podcast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lifestyle--mental-health&#34;&gt;Lifestyle &amp;amp; Mental Health:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-tim-ferriss-show/id863897795&#34;&gt;The Tim Ferriss Show&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/ca/podcast/do-you-f-cking-mind/id1502954097&#34;&gt;Do You F*cking Mind? Mindset Hacks for a Badass Life&lt;/a&gt; by Alexis Fernandez&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;czech-ones---tech&#34;&gt;Czech ones - tech:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/programhrov%C3%A1n%C3%AD-v%C3%A1%C5%A1-hr-pr%C5%AFvodce-sv%C4%9Btem-it/id1593191280&#34;&gt;ProgramHRování - váš HR průvodce světem IT&lt;/a&gt; by Šárka Kousalová &amp;amp; Vojtěch Mádr&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/fuckupy-v-it/id1513940715&#34;&gt;Fuckupy v IT&lt;/a&gt; by Matěj Kotrba&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/junior-guru-programov%C3%A1n%C3%AD-a-kari%C3%A9ra-v-it/id1603653549&#34;&gt;Junior Guru: programování a kariéra v IT&lt;/a&gt; by Honza Javorek &amp;amp; Pája Froňková&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ybyr.net/podcast/&#34;&gt;YBYR: You Build IT, You Run IT&lt;/a&gt; by Láďa Prskavec &amp;amp; Vilda Wanča&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/it-pro-lidi/id1698324361&#34;&gt;IT Pro Lidi&lt;/a&gt; by KPCS CZ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ceskepodcasty.cz/podcast/czechitas-podcast&#34;&gt;Czechitas Podcast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;czech-ones---other&#34;&gt;Czech ones - other:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/strachov%C3%A1n%C3%AD/id1617571533&#34;&gt;Strachování: podcast o strachu&lt;/a&gt; by Roman Förster &amp;amp; Hana Mezerová&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://open.spotify.com/show/1E0r49Kc9iTHaeFosuFGcp&#34;&gt;Terapie sdílením PODCAST&lt;/a&gt; by Ester Geislerová &amp;amp; Honza Vojtko&lt;/li&gt;
&lt;/ul&gt;</description>
      <content>&lt;hr&gt;
&lt;p&gt;Below you will find lists of podcasts I listen to or have discovered (with links to mostly 🍏 Podcasts).&lt;/p&gt;
&lt;h3 id=&#34;coding&#34;&gt;Coding:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-women-who-code-podcast/id1141694878&#34;&gt;The Women Who Code Podcast&lt;/a&gt; by &lt;a href=&#34;https://www.womenwhocode.com/&#34;&gt;Women Who Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/hidden-figures-of-python-podcast/id1720808525&#34;&gt;Hidden Figures of Python Podcast&lt;/a&gt; by PyPodcats&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cybersecurity-czech&#34;&gt;Cybersecurity (Czech):&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/cyber-rangers-podcast/id1513746938&#34;&gt;Cyber Rangers Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/o2-cybercast/id1634178629&#34;&gt;O2 CyberCast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;devops&#34;&gt;DevOps:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcast.bretfisher.com/&#34;&gt;DevOps and Docker Talk: Cloud Native Interview and Tooling&lt;/a&gt; by Bret Fisher&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-scripting-den-podcast/id1729484590&#34;&gt;The Scripting Den Podcast&lt;/a&gt; by Fernando Doglio&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/kubernetes-podcast-from-google/id1370049232&#34;&gt;Kubernetes Podcast from Google&lt;/a&gt; by Abdel Sghiouar &amp;amp; Kaslin Fields&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-humans-of-devops-podcast-series/id1478025522&#34;&gt;The Humans of DevOps&lt;/a&gt; by the &lt;a href=&#34;https://www.devopsinstitute.com/humans-of-devops-podcast/&#34;&gt;DevOps Institute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;networking&#34;&gt;Networking:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-cisco-learning-network/id1349472942&#34;&gt;The Cisco Learning Network Podcast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lifestyle--mental-health&#34;&gt;Lifestyle &amp;amp; Mental Health:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-tim-ferriss-show/id863897795&#34;&gt;The Tim Ferriss Show&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/ca/podcast/do-you-f-cking-mind/id1502954097&#34;&gt;Do You F*cking Mind? Mindset Hacks for a Badass Life&lt;/a&gt; by Alexis Fernandez&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;czech-ones---tech&#34;&gt;Czech ones - tech:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/programhrov%C3%A1n%C3%AD-v%C3%A1%C5%A1-hr-pr%C5%AFvodce-sv%C4%9Btem-it/id1593191280&#34;&gt;ProgramHRování - váš HR průvodce světem IT&lt;/a&gt; by Šárka Kousalová &amp;amp; Vojtěch Mádr&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/fuckupy-v-it/id1513940715&#34;&gt;Fuckupy v IT&lt;/a&gt; by Matěj Kotrba&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/junior-guru-programov%C3%A1n%C3%AD-a-kari%C3%A9ra-v-it/id1603653549&#34;&gt;Junior Guru: programování a kariéra v IT&lt;/a&gt; by Honza Javorek &amp;amp; Pája Froňková&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ybyr.net/podcast/&#34;&gt;YBYR: You Build IT, You Run IT&lt;/a&gt; by Láďa Prskavec &amp;amp; Vilda Wanča&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/it-pro-lidi/id1698324361&#34;&gt;IT Pro Lidi&lt;/a&gt; by KPCS CZ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ceskepodcasty.cz/podcast/czechitas-podcast&#34;&gt;Czechitas Podcast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;czech-ones---other&#34;&gt;Czech ones - other:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/strachov%C3%A1n%C3%AD/id1617571533&#34;&gt;Strachování: podcast o strachu&lt;/a&gt; by Roman Förster &amp;amp; Hana Mezerová&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://open.spotify.com/show/1E0r49Kc9iTHaeFosuFGcp&#34;&gt;Terapie sdílením PODCAST&lt;/a&gt; by Ester Geislerová &amp;amp; Honza Vojtko&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
